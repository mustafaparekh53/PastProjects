{"version":3,"sources":["../../src/components/officeUiFabricPeoplePicker/components/OfficeUiFabricPeoplePickerContainer.tsx"],"names":[],"mappings":"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","file":"components/officeUiFabricPeoplePicker/components/OfficeUiFabricPeoplePickerContainer.js","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  IOfficeUiFabricPeoplePickerContainerProps,\r\n  IOfficeUiFabricPeoplePickerSelection\r\n} from \"./IOfficeUiFabricPeoplePickerContainerProps\";\r\nimport { people } from \"./PeoplePickerExampleData\";\r\nimport { Environment, EnvironmentType } from \"@microsoft/sp-core-library\";\r\nimport { SharePointUserPersona } from \"../models/OfficeUiFabricPeoplePicker\";\r\nimport {\r\n  sp,\r\n  PeoplePickerEntity,\r\n  ClientPeoplePickerQueryParameters,\r\n  WebEnsureUserResult,\r\n  stringIsNullOrEmpty\r\n} from \"@pnp/pnpjs\";\r\nimport \"@pnp/polyfill-ie11\";\r\nimport { IOfficeUiFabricPeoplePickerContainerState } from \"./IOfficeUiFabricPeoplePickerContainerState\";\r\nimport { OfficeUiFabricPeoplePicker } from \"./OfficeUiFabricPeoplePicker\";\r\n\r\nexport class OfficeUiFabricPeoplePickerContainer extends React.Component<\r\n  IOfficeUiFabricPeoplePickerContainerProps,\r\n  IOfficeUiFabricPeoplePickerContainerState\r\n> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedItems: undefined\r\n    };\r\n  }\r\n\r\n  public render(): React.ReactElement<\r\n    IOfficeUiFabricPeoplePickerContainerProps\r\n  > {\r\n    return (\r\n      <OfficeUiFabricPeoplePicker\r\n        label={this.props.label}\r\n        itemLimit={this.props.itemLimit}\r\n        onResolveSuggestions={this._onFilterChanged}\r\n        selectedItems={this.state.selectedItems}\r\n        onChange={this._onSelectionChange}\r\n      />\r\n    );\r\n  }\r\n\r\n  public componentDidMount() {\r\n    if (Environment.type === EnvironmentType.Local) {\r\n    } else {\r\n      if (this.props.selections !== undefined) {\r\n        this._fetchSelectionByEmail(this.props.selections);\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(\r\n    newProps: IOfficeUiFabricPeoplePickerContainerProps\r\n  ): void {\r\n    // If component is not currently controlled and defaultValue changes, set value to new defaultValue.\r\n    if (\r\n      newProps.selections !== this.props.selections &&\r\n      newProps.selections !== undefined\r\n    ) {\r\n      this._fetchSelectionByEmail(newProps.selections);\r\n    }\r\n  }\r\n\r\n  private _getSharePointUserPersonas(\r\n    entities: PeoplePickerEntity[]\r\n  ): Promise<SharePointUserPersona[]> {\r\n    var batch = sp.web.createBatch();\r\n\r\n    let personas = [];\r\n\r\n    entities.map((entity: PeoplePickerEntity) => {\r\n      batch.addResolveBatchDependency(\r\n        sp.web\r\n          .inBatch(batch)\r\n          .ensureUser(entity.EntityData.Email)\r\n          .then((result: WebEnsureUserResult) => {\r\n            personas.push(new SharePointUserPersona(entity, result));\r\n          })\r\n          .catch((error: any) => {\r\n            console.log(error);\r\n          })\r\n      );\r\n    });\r\n\r\n    return batch.execute().then(_ => {\r\n      return personas;\r\n    });\r\n  }\r\n\r\n  private _fetchSelectionByEmail = (\r\n    selections: IOfficeUiFabricPeoplePickerSelection[]\r\n  ) => {\r\n    var batch = sp.web.createBatch();\r\n\r\n    let entities: PeoplePickerEntity[] = [];\r\n\r\n    selections.map((selection: IOfficeUiFabricPeoplePickerSelection) => {\r\n      batch.addResolveBatchDependency(\r\n        sp.profiles\r\n          .clientPeoplePickerSearchUser(this._getQueryParams(selection.email))\r\n          .then((result: PeoplePickerEntity[]) => {\r\n            if (result.length === 1) {\r\n              entities.push(result[0]);\r\n            } else {\r\n              console.log(\"multiple entities fetched\");\r\n            }\r\n          })\r\n      );\r\n    });\r\n\r\n    batch.execute().then(_ => {\r\n      this._getSharePointUserPersonas(entities).then(\r\n        (personas: SharePointUserPersona[]) => {\r\n          this.setState({ selectedItems: personas });\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  private _onSelectionChange = (selections: SharePointUserPersona[]) => {\r\n    this.setState(\r\n      {\r\n        selectedItems: selections\r\n      },\r\n      () => {\r\n        let pickerSelections: IOfficeUiFabricPeoplePickerSelection[] = [];\r\n        selections.map((selection: SharePointUserPersona) => {\r\n          pickerSelections.push({\r\n            id: selection.user.Id,\r\n            email: selection.user.Email\r\n          });\r\n        });\r\n        this.props.onChange(pickerSelections);\r\n      }\r\n    );\r\n  };\r\n\r\n  private _onFilterChanged = (filterText: string) => {\r\n    if (stringIsNullOrEmpty(filterText)) {\r\n      return [];\r\n    } else {\r\n      if (filterText.length > 2) {\r\n        return this._searchPeople(filterText);\r\n      }\r\n    }\r\n  };\r\n\r\n  private _getQueryParams(terms: string): ClientPeoplePickerQueryParameters {\r\n    let principalType: number = 0;\r\n    if (this.props.principalTypeUser === true) {\r\n      principalType += 1;\r\n    }\r\n    if (this.props.principalTypeSharePointGroup === true) {\r\n      principalType += 8;\r\n    }\r\n    if (this.props.principalTypeSecurityGroup === true) {\r\n      principalType += 4;\r\n    }\r\n    if (this.props.principalTypeDistributionList === true) {\r\n      principalType += 2;\r\n    }\r\n    return {\r\n      AllowEmailAddresses: true,\r\n      AllowMultipleEntities: false,\r\n      AllUrlZones: false,\r\n      MaximumEntitySuggestions: this.props.maximumEntitySuggestions,\r\n      PrincipalSource: 15,\r\n      // PrincipalType controls the type of entities that are returned in the results.\r\n      // Choices are All - 15, Distribution List - 2 , Security Groups - 4, SharePoint Groups - 8, User - 1.\r\n      // These values can be combined (example: 13 is security + SP groups + users)\r\n      PrincipalType: principalType,\r\n      QueryString: terms\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Returns fake people results for the Mock mode\r\n   */\r\n  private searchPeopleFromMock(terms: string): SharePointUserPersona[] {\r\n    return people.filter((value: SharePointUserPersona) => {\r\n      if (value.text.toLowerCase().indexOf(terms.toLowerCase()) !== -1) {\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function\r\n   * Returns people results after a REST API call\r\n   */\r\n  private _searchPeople(\r\n    terms: string\r\n  ): SharePointUserPersona[] | Promise<SharePointUserPersona[]> {\r\n    if (Environment.type === EnvironmentType.Local) {\r\n      // If the running environment is local, load the data from the mock\r\n      return this.searchPeopleFromMock(terms);\r\n    } else {\r\n      return sp.profiles\r\n        .clientPeoplePickerSearchUser(this._getQueryParams(terms))\r\n        .then((entities: PeoplePickerEntity[]) => {\r\n          return this._getSharePointUserPersonas(entities);\r\n        })\r\n        .catch((error: any) => {\r\n          console.log(error);\r\n          return [];\r\n        });\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}