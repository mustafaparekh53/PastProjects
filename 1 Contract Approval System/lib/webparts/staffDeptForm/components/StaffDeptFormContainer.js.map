{"version":3,"sources":["../../src/webparts/staffDeptForm/components/StaffDeptFormContainer.tsx"],"names":[],"mappings":"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","file":"webparts/staffDeptForm/components/StaffDeptFormContainer.js","sourcesContent":["import * as React from \"react\";\r\nimport { IStaffDeptFormContainerProps } from \"./IStaffDeptFormContainerProps\";\r\nimport StaffDeptForm from \"./StaffDeptForm\";\r\nimport { IStaffDeptFormContainerState } from \"./IStaffDeptFormContainerState\";\r\nimport { sp, List } from \"@pnp/sp\";\r\nimport \"@pnp/polyfill-ie11\";\r\nimport { WebConfig } from \"../../ComComponents/webconfig\";\r\nimport * as moment from \"moment\";\r\n\r\nexport default class StaffDeptFormContainer extends React.Component<\r\n  IStaffDeptFormContainerProps,\r\n  IStaffDeptFormContainerState\r\n> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      deptOptions: [],\r\n      staffItems: []\r\n    };\r\n  }\r\n\r\n  public render(): React.ReactElement<IStaffDeptFormContainerProps> {\r\n    return (\r\n      <StaffDeptForm\r\n        deptOptions={this.state.deptOptions}\r\n        staffItems={this.state.staffItems}\r\n        updateContractItems={this.updateContractItems}\r\n        deleteStaffItems={this.deleteStaffItems}\r\n        addStaffItem={this.addStaffItem}\r\n        updateStaffItem={this.updateStaffItem}\r\n      />\r\n    );\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.fetchDeptOptions();\r\n    this.fetchStaffItems();\r\n  }\r\n\r\n  private fetchDeptOptions(): void {\r\n    sp.web.currentUser.get().then(u => {\r\n      sp.web.lists\r\n        .getByTitle(WebConfig.DeptsListName)\r\n        .items.get()\r\n        .then(items => {\r\n          let deptOptions: any[] = [];\r\n          items.map(item => {\r\n            deptOptions.push({ key: item.Id, text: item.Title });\r\n          });\r\n          this.setState({ deptOptions: deptOptions });\r\n        });\r\n    });\r\n  }\r\n\r\n  private fetchStaffItems: () => void = () => {\r\n    sp.web.lists\r\n      .getByTitle(WebConfig.StaffDeptListName)\r\n      .items.select(\"*\", \"Author/Title\", \"Staff/Title\", \"Dept/Title\")\r\n      .expand(\"Author\", \"Staff\", \"Dept/Id\")\r\n      .orderBy(\"Modified\", false)\r\n      .getAll()\r\n      .then(result => {\r\n        //staffItems\r\n        let staffItems: any[] = [];\r\n        result.map(item => {\r\n          staffItems.push({\r\n            key: item.Id,\r\n            Staff: item.Staff ? item.Staff.Title : \"\",\r\n            Dept: item.Dept.Title,\r\n            Created: moment(item.Created, moment.ISO_8601).format(\r\n              \"YYYY/MM/DD HH:mm:ss\"\r\n            ),\r\n            Author: item.Author.Title\r\n          });\r\n        });\r\n        this.setState({ staffItems: staffItems });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  private updateContractItems: (StaffId: number, DeptId: number) => void = (\r\n    StaffId: number,\r\n    DeptId: number\r\n  ) => {\r\n    sp.web.lists\r\n      .getByTitle(WebConfig.requestedItemsListName)\r\n      .items.filter(\"AuthorId eq \" + StaffId)\r\n      .orderBy(\"Id\", false)\r\n      .getAll()\r\n      .then(items => {\r\n        let list: List = sp.web.lists.getByTitle(\r\n          WebConfig.requestedItemsListName\r\n        );\r\n\r\n        let batch = sp.web.createBatch();\r\n\r\n        items.map(item => {\r\n          list.items\r\n            .getById(item.Id)\r\n            .inBatch(batch)\r\n            .update({ StaffDeptId: DeptId })\r\n            .then(() => {\r\n              console.log(\"更新\" + item.Id + \"成功\");\r\n            });\r\n        });\r\n\r\n        return batch\r\n          .execute()\r\n          .then(() => console.log(\"update completed\"))\r\n          .catch((error: any) => console.log(error));\r\n      });\r\n  };\r\n\r\n  private deleteStaffItems: (staffItems: any[]) => Promise<void> = (\r\n    staffItems: any[]\r\n  ) => {\r\n    let list: List = sp.web.lists.getByTitle(WebConfig.StaffDeptListName);\r\n\r\n    let batch = sp.web.createBatch();\r\n\r\n    staffItems.map((item: any) => {\r\n      list.items\r\n        .getById(item.key)\r\n        .inBatch(batch)\r\n        .delete()\r\n        .then(() => {\r\n          console.log(`delete ${item.Staff}`);\r\n        })\r\n        .catch((error: any) => console.log(error));\r\n    });\r\n\r\n    return batch.execute().then(() => {\r\n      this.fetchStaffItems();\r\n      console.log(\"deletion completed\");\r\n    });\r\n  };\r\n\r\n  private addStaffItem: (\r\n    staffId: number,\r\n    deptId: number,\r\n    shouldChangeExisting: boolean\r\n  ) => Promise<void> = (\r\n    staffId: number,\r\n    deptId: number,\r\n    shouldChangeExisting: boolean\r\n  ) => {\r\n    return sp.web.lists\r\n      .getByTitle(WebConfig.StaffDeptListName)\r\n      .items.add({\r\n        StaffId: staffId,\r\n        DeptId: deptId\r\n      })\r\n      .then(() => {\r\n        if (shouldChangeExisting) {\r\n          this.updateContractItems(staffId, deptId);\r\n        }\r\n        this.fetchStaffItems();\r\n      });\r\n  };\r\n\r\n  private updateStaffItem: (\r\n    staffItemId: number,\r\n    staffId: number,\r\n    deptId: number,\r\n    shouldChangeExisting: boolean\r\n  ) => Promise<void> = (\r\n    staffItemId: number,\r\n    staffId: number,\r\n    deptId: number,\r\n    shouldChangeExisting: boolean\r\n  ) => {\r\n    return sp.web.lists\r\n      .getByTitle(WebConfig.StaffDeptListName)\r\n      .items.getById(staffItemId)\r\n      .update({\r\n        StaffId: staffId,\r\n        DeptId: deptId\r\n      })\r\n      .then(() => {\r\n        if (shouldChangeExisting) {\r\n          this.updateContractItems(staffId, deptId);\r\n        }\r\n        this.fetchStaffItems();\r\n      });\r\n  };\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}