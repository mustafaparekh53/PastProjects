{"version":3,"sources":["../../src/webparts/ComComponents/Email/EmailUtil.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,EAAE,EAAmB,MAAM,SAAS,CAAC;AAC9C,OAAO,oBAAoB,CAAC;AAG5B,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACrD,IAAM,4BAA4B,GAAsB,UAAC,GAAQ;IAC/D,MAAM,CAAC;QACL,UAAU,EAAE;YACV,IAAI,EAAE,yBAAyB;SAChC;QACD,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG;YAC/B,MAAM,CAAC;gBACL,UAAU,EAAE;oBACV,IAAI,EAAE,aAAa;iBACpB;gBACD,GAAG,EAAE,GAAG;gBACR,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC;gBACf,SAAS,EAAE,YAAY;aACxB,CAAC;QACJ,CAAC,CAAC;KACH,CAAC;AACJ,CAAC,CAAC;AACF,MAAM,CAAC,IAAM,SAAS,GAAe;IACnC,aAAa,EAAb,UAAc,EAAU,EAAE,IAAY,EAAE,OAAe;QAAvD,iBAQC;QAPC,MAAM,CAAC,EAAE,CAAC,GAAG;aACV,WAAW,CAAC,EAAE,CAAC;aACf,GAAG,EAAE;aACL,IAAI,CAAC,UAAA,IAAI;YACR,qBAAqB;YACrB,MAAM,CAAC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACP,CAAC;IACD,SAAS,EAAT,UAAU,EAAU,EAAE,IAAY,EAAE,OAAe;QACjD,IAAM,GAAG,GAAa,EAAE,CAAC;QACzB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACb,IAAM,OAAO,GAAsB,4BAA4B,CAAC;YAC9D,cAAc,EAAE,WAAW;SAC5B,CAAC,CAAC;QACH,IAAI,OAAO,GAAoB;YAC7B,EAAE,EAAE,GAAG;YACP,iBAAiB;YACjB,mBAAmB;YACnB,OAAO,EAAE,OAAO;YAChB,IAAI,EAAE,IAAI;YACV,iBAAiB,EAAE,OAAO;SACR,CAAC;QACrB,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IACD,aAAa,EAAb;QACE,IAAI,GAAG,GAAW,UAAU,CAAC;QAC7B,GAAG;YACD,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,kBAAkB,CAAC;QACzE,MAAM,CAAC,aAAW,GAAG,SAAI,SAAS,CAAC,UAAU,SAAM,CAAC;IACtD,CAAC;CACF,CAAC","file":"webparts/ComComponents/Email/EmailUtil.js","sourcesContent":["import { sp, EmailProperties } from \"@pnp/sp\";\r\nimport \"@pnp/polyfill-ie11\";\r\nimport { TypedHash } from \"@pnp/common\";\r\nimport { IEmailUtil } from \"./IEmailUtil\";\r\nimport { CurrentUrl, WebConfig } from \"../webconfig\";\r\nconst objectToSPKeyValueCollection: (obj: any) => any = (obj: any) => {\r\n  return {\r\n    __metadata: {\r\n      type: \"Collection(SP.KeyValue)\"\r\n    },\r\n    results: Object.keys(obj).map(key => {\r\n      return {\r\n        __metadata: {\r\n          type: \"SP.KeyValue\"\r\n        },\r\n        Key: key,\r\n        Value: obj[key],\r\n        ValueType: \"Edm.String\"\r\n      };\r\n    })\r\n  };\r\n};\r\nexport const EmailUtil: IEmailUtil = {\r\n  SendEmailbyId(to: number, body: string, subject: string): Promise<void> {\r\n    return sp.web\r\n      .getUserById(to)\r\n      .get()\r\n      .then(user => {\r\n        // console.log(user);\r\n        return this.SendEmail(user.Email, body, subject);\r\n      });\r\n  },\r\n  SendEmail(to: string, body: string, subject: string): Promise<void> {\r\n    const tos: string[] = [];\r\n    tos.push(to);\r\n    const headers: TypedHash<string> = objectToSPKeyValueCollection({\r\n      \"content-type\": \"text/html\"\r\n    });\r\n    let emlprop: EmailProperties = {\r\n      To: tos,\r\n      // CC?: string[];\r\n      //  BCC?: string[];\r\n      Subject: subject,\r\n      Body: body,\r\n      AdditionalHeaders: headers\r\n    } as EmailProperties;\r\n    return sp.utility.sendEmail(emlprop);\r\n  },\r\n  getsystemlink(): string {\r\n    let url: string = CurrentUrl;\r\n    url =\r\n      url.substr(0, url.lastIndexOf(\"/\") + 1) + WebConfig.InapprovalListPage;\r\n    return `<a href=${url}>${WebConfig.SystemName}</a>`;\r\n  }\r\n};\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}